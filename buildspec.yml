version: 0.2

#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"

phases:
  #install:
    #commands:
      #- git submodule init
      #- git submodule update --remote
    #finally:
      # - command
      # - command
  #pre_build:
    # commands:
    #finally:
      # - command
      # - command
  build:
    commands:
      - mv $CODEBUILD_SRC_DIR_gitservice $CODEBUILD_SRC_DIR
      - mv $CODEBUILD_SRC_DIR_gitcrud $CODEBUILD_SRC_DIR
      - mv $CODEBUILD_SRC_DIR_gitemail $CODEBUILD_SRC_DIR
      - mv $CODEBUILD_SRC_DIR_gittimeline $CODEBUILD_SRC_DIR
      - mv $CODEBUILD_SRC_DIR_gitsearch $CODEBUILD_SRC_DIR
      - mv $CODEBUILD_SRC_DIR_gitgateway $CODEBUILD_SRC_DIR
      - ls -lR
      - SUBJ="/C=US/ST=CA/O=ABC/CN=ele-one-brown.com"
      - sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout apiGateway/nginx/ele-one-brown.com.key -out apiGateway/nginx/ele-one-brown.com.crt -subj "$SUBJ"
      # - cp crud_db.env.example crud_db.env
      # - cp gateway_db.env.example gateway_db.env
      - docker login -u cybercuffs -p $DOCKERHUBPASS

    #finally:
      # - command
      # - command


  post_build:
    commands:
       - cd $CODEBUILD_SRC_DIR; zip -r  /tmp/brown.zip .
       - cp $CODEBUILD_SRC_DIR/appspec.yml /tmp/appspec.yml
       - echo "cd /tmp/; yes | unzip /tmp/brown.zip -d /home/brown; cd /home/brown; ls -la" > /tmp/unzip.sh
       - echo "yes| sudo apt-get install unzip; sudo curl -L 'https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)' -o /usr/local/bin/docker-compose; sudo chmod +x /usr/local/bin/docker-compose" > /tmp/install_docker-compose.sh
       - echo "cd /home/brown/; docker login -u cybercuffs -p '"$DOCKERHUBPASS"'; yes | docker-compose -f docker-compose-codepipeline.yml up -d splunk; sleep 30; yes | docker-compose -f docker-compose-codepipeline.yml up -d" > /tmp/run_docker-compose.sh
       - echo "sed -i 's/localhost/ele-one-brown.com/g' /home/brown/apiGateway/client/src/components/App.jsx ; sed -i 's/localhost/ele-one-brown.com/g' /home/brown/apiGateway/client/src/components/Services.jsx" > /tmp/replace_localhost.sh
       - echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\nAWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\nAWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" > /tmp/aws_profile.env
       - echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD\nMYSQL_DATABASE=ioc\nMYSQL_USER=$MYSQL_USER\nMYSQL_PASSWORD=$MYSQL_PASSWORD" > /tmp/crud_db.env
       - echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD\nMYSQL_DATABASE=user_sessions\nMYSQL_USER=$MYSQL_USER\nMYSQL_PASSWORD=$MYSQL_PASSWORD" > /tmp/gateway_db.env


    #finally:
      # - command
      # - command
artifacts:
  files:
     - /tmp/brown.zip
     - /tmp/unzip.sh
     - /tmp/appspec.yml
     - /tmp/replace_localhost.sh
     - /tmp/install_docker-compose.sh
     - /tmp/run_docker-compose.sh
     - /tmp/aws_profile.env
     - /tmp/crud_db.env
     - /tmp/gateway_db.env
    # - name
  discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - path
    # - path