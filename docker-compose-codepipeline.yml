######### Notes
## By default splunk has 00000000-0000-0000-0000-000000000000 HEC token that nginx service is using to log that goes to index = main
##  new token can be created - Splunk -> Setting -> Inputs -> HTTP Event Collector via Splunk UI
## splunk takes time even after the container starts and if not taken care of this issue, nginx will exit with error. Note that depends_on only check for container status and not all the processes inside it.

version: "3"

services:

  splunk:
    image: store/splunk/enterprise:6.5.2-monitor
    hostname: splunkenterprise
    container_name: splunk-node
    environment:
      SPLUNK_START_ARGS: --accept-license --answer-yes
      SPLUNK_ENABLE_LISTEN: 9997
      SPLUNK_ADD: tcp 1514
      SPLUNK_USER: root
    volumes:
      - /var/lib/docker/containers:/host/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes:
      - /opt/splunk/etc
      - /opt/splunk/var
    ports:
      - "8000:8000"
      - "9997:9997"
      - "8088:8088"
      - "1514:1514"
    networks:
      - back-end
      - front-end

  nginx:
    build: ./apiGateway/nginx
    container_name: nginx-node
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "7777:7777"
    networks:
      - back-end
      - front-end
    depends_on:
      - splunk
      - gateway
      - crud
      - search

    logging:
      driver: splunk
      options:
        splunk-url: "https://127.0.0.1:8088"
        splunk-token: "00000000-0000-0000-0000-000000000000"
        splunk-insecureskipverify: "true"

  gateway:
    build: ./apiGateway
    container_name: gateway-node
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "9000:9000"
    env_file:
      gateway_db.env
    environment:
      MYSQL_HOST: brown-rds.cybcv6sapix7.us-east-1.rds.amazonaws.com
    networks:
      - front-end
      - back-end
    depends_on:
      - crud
      - search


  crud:
    build: ./crudService
    container_name: crud-node
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "5001:5001"
    env_file:
      - crud_db.env
    environment:
      MYSQL_HOST: brown-rds.cybcv6sapix7.us-east-1.rds.amazonaws.com
    networks:
      - front-end
      - back-end

  search:
    build: ./searchService
    container_name: search-node
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "5002:5002"
    networks:
      - front-end
      - back-end

  email:
    build: ./emailService
    container_name: email-node
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "5004:5004"
    env_file:
      - aws_profile.env
    networks:
      - front-end
      - back-end

  timeline:
    build: ./timelineService
    container_name: timeline-node
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "5003:5003"
    networks:
      - front-end
      - back-end

networks:
  front-end:
  back-end:

